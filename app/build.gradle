/*
 * Copyright 2019-2022 The Developers.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "com.github.oheger.locationteller"
        minSdkVersion 23
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/*.kotlin_module']
        }
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            all {
                useJUnitPlatform()
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        compose true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    namespace 'com.github.oheger.locationteller'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.activity:activity-compose:$versionComposeActivity"
    implementation "androidx.compose.animation:animation:$versionCompose"
    implementation "androidx.compose.material:material:$versionCompose"
    implementation "androidx.compose.ui:ui-tooling:$versionCompose"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$versionComposeViewModel"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.navigation:navigation-compose:$versionComposeNavigation"
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "com.google.accompanist:accompanist-permissions:$versionAccompanist"
    implementation 'com.google.android.gms:play-services-location:20.0.0'
    implementation "com.google.android.gms:play-services-maps:$versionPlayServicesMaps"
    implementation "com.google.maps.android:maps-compose:$versionComposeMaps"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versionCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versionCoroutines"

    implementation project(":server-access")

    debugImplementation "androidx.compose.ui:ui-test-manifest:$versionCompose"
    testImplementation "androidx.compose.ui:ui-test-junit4:$versionCompose"
    testImplementation 'androidx.test:core-ktx:1.4.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation "io.kotest:kotest-assertions-core:$versionKoTest"
    testImplementation "io.kotest:kotest-runner-junit5:$versionKoTest"
    testImplementation "io.mockk:mockk:$versionMockK"
    testImplementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.21'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versionCoroutines"
    testImplementation "org.robolectric:robolectric:$versionRobolectric"
    testImplementation "org.junit.vintage:junit-vintage-engine:$versionJUnit5"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.ObsoleteCoroutinesApi"
        freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        freeCompilerArgs += "-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi"
        freeCompilerArgs += "-Xjvm-default=all"
    }
}

// Disable release test execution for now because some dependencies cannot be resolved.
tasks.whenTaskAdded { task ->
    if (task.name.contains("compileReleaseUnitTest")) {
        task.enabled = false
    }
}